


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; * Memory Setup stuff - taken from blob memsetup.S
    3 00000000         ; *
    4 00000000         ; * Copyright (C) 1999 2000 2001 Erik Mouw (J.A.K.Mouw@i
                       ts.tudelft.nl) and
    5 00000000         ; *                     Jan-Derk Bakker (J.D.Bakker@its.
                       tudelft.nl)
    6 00000000         ; *
    7 00000000         ; * Modified for the Samsung SMDK2410 by
    8 00000000         ; * (C) Copyright 2002
    9 00000000         ; * David Mueller, ELSOFT AG, <d.mueller@elsoft.ch>
   10 00000000         ; *
   11 00000000         ; * See file CREDITS for list of people who contributed 
                       to this
   12 00000000         ; * project.
   13 00000000         ; *
   14 00000000         ; * This program is free software; you can redistribute 
                       it and/or
   15 00000000         ; * modify it under the terms of the GNU General Public 
                       License as
   16 00000000         ; * published by the Free Software Foundation; either ve
                       rsion 2 of
   17 00000000         ; * the License, or (at your option) any later version.
   18 00000000         ; *
   19 00000000         ; * This program is distributed in the hope that it will
                        be useful,
   20 00000000         ; * but WITHOUT ANY WARRANTY; without even the implied w
                       arranty of
   21 00000000         ; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
                         See the
   22 00000000         ; * GNU General Public License for more details.
   23 00000000         ; *
   24 00000000         ; * You should have received a copy of the GNU General P
                       ublic License
   25 00000000         ; * along with this program; if not, write to the Free S
                       oftware
   26 00000000         ; * Foundation, Inc., 59 Temple Place, Suite 330, Boston
                       ,
   27 00000000         ; * MA 02111-1307 USA
   28 00000000         ; */
   29 00000000         
   30 00000000         
   31 00000000         ;#include <config.h>
   32 00000000         ;#include <version.h>
   33 00000000         
   34 00000000         
   35 00000000         ;/* some parameters for the board */
   36 00000000         
   37 00000000         ;/*
   38 00000000         ; *
   39 00000000         ; * Taken from linux/arch/arm/boot/compressed/head-s3c24
                       10.S
   40 00000000         ; *
   41 00000000         ; * Copyright (C) 2002 Samsung Electronics SW.LEE  <hitc
                       hcar@sec.samsung.com>
   42 00000000         ; *
   43 00000000         ; */
   44 00000000         
   45 00000000 00000000 



ARM Macro Assembler    Page 2 


                       CONFIG_133MHZ_SDRAM
                               equ              0
   46 00000000 00000000 
                       CONFIG_128MB_SDRAM
                               equ              0
   47 00000000         
   48 00000000 48000000 
                       BWSCON  equ              0x48000000
   49 00000000         
   50 00000000         ;/* BWSCON */
   51 00000000 00000000 
                       DW8     equ              (0x0)
   52 00000000 00000001 
                       DW16    equ              (0x1)
   53 00000000 00000002 
                       DW32    equ              (0x2)
   54 00000000 00000004 
                       WAIT    equ              (0x1<<2)
   55 00000000 00000008 
                       UBLB    equ              (0x1<<3)
   56 00000000         
   57 00000000 00000001 
                       B1_BWSCON
                               equ              (DW16)
   58 00000000 00000001 
                       B2_BWSCON
                               equ              (DW16)
   59 00000000 0000000D 
                       B3_BWSCON
                               equ              (DW16 + WAIT + UBLB)
   60 00000000 00000001 
                       B4_BWSCON
                               equ              (DW16)
   61 00000000 00000000 
                       B5_BWSCON
                               equ              (DW8)
   62 00000000 00000002 
                       B6_BWSCON
                               equ              (DW32)
   63 00000000 00000002 
                       B7_BWSCON
                               equ              (DW32)
   64 00000000         
   65 00000000         ;/* BANK0CON */
   66 00000000 00000000 
                       B0_Tacs equ              0x0         ;/*  0clk */
   67 00000000 00000000 
                       B0_Tcos equ              0x0         ;/*  0clk */
   68 00000000 00000007 
                       B0_Tacc equ              0x7         ;/* 14clk */
   69 00000000 00000000 
                       B0_Tcoh equ              0x0         ;/*  0clk */
   70 00000000 00000000 
                       B0_Tah  equ              0x0         ;/*  0clk */
   71 00000000 00000000 
                       B0_Tacp equ              0x0
   72 00000000 00000000 
                       B0_PMC  equ              0x0         ;/* normal */
   73 00000000         



ARM Macro Assembler    Page 3 


   74 00000000         ;/* BANK1CON */
   75 00000000 00000000 
                       B1_Tacs equ              0x0         ;/*  0clk */
   76 00000000 00000000 
                       B1_Tcos equ              0x0         ;/*  0clk */
   77 00000000 00000007 
                       B1_Tacc equ              0x7         ;/* 14clk */
   78 00000000 00000000 
                       B1_Tcoh equ              0x0         ;/*  0clk */
   79 00000000 00000000 
                       B1_Tah  equ              0x0         ;/*  0clk */
   80 00000000 00000000 
                       B1_Tacp equ              0x0
   81 00000000 00000000 
                       B1_PMC  equ              0x0
   82 00000000         
   83 00000000 00000000 
                       B2_Tacs equ              0x0
   84 00000000 00000000 
                       B2_Tcos equ              0x0
   85 00000000 00000007 
                       B2_Tacc equ              0x7
   86 00000000 00000000 
                       B2_Tcoh equ              0x0
   87 00000000 00000000 
                       B2_Tah  equ              0x0
   88 00000000 00000000 
                       B2_Tacp equ              0x0
   89 00000000 00000000 
                       B2_PMC  equ              0x0
   90 00000000         
   91 00000000 00000000 
                       B3_Tacs equ              0x0         ;/*  0clk */
   92 00000000 00000003 
                       B3_Tcos equ              0x3         ;/*  4clk */
   93 00000000 00000007 
                       B3_Tacc equ              0x7         ;/* 14clk */
   94 00000000 00000001 
                       B3_Tcoh equ              0x1         ;/*  1clk */
   95 00000000 00000000 
                       B3_Tah  equ              0x0         ;/*  0clk */
   96 00000000 00000003 
                       B3_Tacp equ              0x3         ;/*  6clk */
   97 00000000 00000000 
                       B3_PMC  equ              0x0         ;/* normal */
   98 00000000         
   99 00000000 00000000 
                       B4_Tacs equ              0x0         ;/*  0clk */
  100 00000000 00000000 
                       B4_Tcos equ              0x0         ;/*  0clk */
  101 00000000 00000007 
                       B4_Tacc equ              0x7         ;/* 14clk */
  102 00000000 00000000 
                       B4_Tcoh equ              0x0         ;/*  0clk */
  103 00000000 00000000 
                       B4_Tah  equ              0x0         ;/*  0clk */
  104 00000000 00000000 
                       B4_Tacp equ              0x0
  105 00000000 00000000 



ARM Macro Assembler    Page 4 


                       B4_PMC  equ              0x0         ;/* normal */
  106 00000000         
  107 00000000 00000000 
                       B5_Tacs equ              0x0         ;/*  0clk */
  108 00000000 00000000 
                       B5_Tcos equ              0x0         ;/*  0clk */
  109 00000000 00000007 
                       B5_Tacc equ              0x7         ;/* 14clk */
  110 00000000 00000000 
                       B5_Tcoh equ              0x0         ;/*  0clk */
  111 00000000 00000000 
                       B5_Tah  equ              0x0         ;/*  0clk */
  112 00000000 00000000 
                       B5_Tacp equ              0x0
  113 00000000 00000000 
                       B5_PMC  equ              0x0         ;/* normal */
  114 00000000         
  115 00000000 00000003 
                       B6_MT   equ              0x3         ;/* SDRAM */
  116 00000000         ;/* B6_Trcd     0x1 *//* 3clk */ /*HJ_del 100MHz */
  117 00000000         ;/* B6_SCAN  0x1 *//* 9bit */ /*HJ_del 64MB SDRAM */
  118 00000000         ;/* B6_Trcd     0x0 *//* 2clk */ /*HJ_del 133MHz */
  119 00000000         ;/* B6_SCAN  0x2 *//* 10bit */ /*HJ_del 128MB SDRAM */
  120 00000000                 IF               CONFIG_133MHZ_SDRAM = 1
  123 00000000 00000001 
                       B6_Trcd equ              0x1
  124 00000000                 ENDIF
  125 00000000         
  126 00000000                 IF               CONFIG_128MB_SDRAM = 1
  129 00000000 00000001 
                       B6_SCAN equ              0x1
  130 00000000                 ENDIF
  131 00000000         
  132 00000000 00000003 
                       B7_MT   equ              0x3         ;/* SDRAM */
  133 00000000         ;/* B7_Trcd    0x1 *//* 3clk */ /*HJ_del 100MHz */
  134 00000000         ;/* B7_SCAN  0x1 *//* 9bit */ /*HJ_del 64MB SDRAM */
  135 00000000         ;/* B7_Trcd     0x0 *//* 2clk */ /*HJ_add 133MHz */
  136 00000000         ;/* B7_SCAN  0x2 *//* 10bit */ /*HJ_del 128MB SDRAM */
  137 00000000                 IF               CONFIG_133MHZ_SDRAM = 1
  140 00000000 00000001 
                       B7_Trcd equ              0x1
  141 00000000                 ENDIF
  142 00000000         
  143 00000000                 IF               CONFIG_128MB_SDRAM = 1
  146 00000000 00000001 
                       B7_SCAN equ              0x1
  147 00000000                 ENDIF
  148 00000000         
  149 00000000         ;/* REFRESH parameter */
  150 00000000 00000001 
                       REFEN   equ              0x1         ;/* Refresh enable 
                                                            */
  151 00000000 00000000 
                       TREFMD  equ              0x0         ;/* CBR(CAS before 
                                                            RAS)/Auto refresh *
                                                            /
  152 00000000         ;/* Trp    0x0 *//* 2clk */      /* HJ_del 100MHz */
  153 00000000         ;/* Trc       0x3 *//* 7clk */      /* HJ_del 100MHz */



ARM Macro Assembler    Page 5 


  154 00000000         ;/* Tchr    0x2 *//* 3clk */      /* HJ_del 100MHz */
  155 00000000         ;/* REFCNT    0x4f4 *//* period=7.8125us, HCLK=100Mhz, (
                       2048+1-7.8125*100) */ /* HJ_del 100MHz */
  156 00000000         ;/* Trp    0x1 *//* 3clk */      /* HJ_del 133MHz */
  157 00000000         ;/* Tsrc       0x3 *//* 7clk */      /* HJ_del 133MHz */
                       
  158 00000000         ;/* REFCNT    0x3f4 *//* period=7.8125us, HCLK=133Mhz, (
                       2048+1-7.8125*133) */ /* HJ_del 133MHz */
  159 00000000                 IF               CONFIG_133MHZ_SDRAM = 1
  164 00000000 00000000 
                       Trp     equ              0x0
  165 00000000 00000003 
                       Trc     equ              0x3
  166 00000000 00000002 
                       Tchr    equ              0x2
  167 00000000 000004F4 
                       REFCNT  equ              0x4f4
  168 00000000                 ENDIF
  169 00000000         ;/**************************************/
  170 00000000         
  171 00000000                 preserve8
  172 00000000                 area             lowlevel, code
  173 00000000                 arm
  174 00000000         
  175 00000000         lowlevel_init
  176 00000000         ;/* memory control configuration */
  177 00000000         ;/* make r0 relative the current location so that it */
  178 00000000         ;/* reads SMRDATA out of FLASH rather than memory ! */
  179 00000000 E59F0020        ldr              r0, =SMRDATA
  180 00000004 E51F100C        ldr              r1, _TEXT_BASE
  181 00000008 E0400001        sub              r0, r0, r1
  182 0000000C E3A01312        ldr              r1, =BWSCON ;/* Bus Width Statu
                                                            s Controller */
  183 00000010 E2802034        add              r2, r0, #13*4
  184 00000014         loop
  185 00000014 E4903004        ldr              r3, [r0], #4
  186 00000018 E4813004        str              r3, [r1], #4
  187 0000001C E1520000        cmp              r2, r0
  188 00000020 1AFFFFFB        bne              loop
  189 00000024         
  190 00000024         ;/* everything is fine now */
  191 00000024 E12FFF1E        bx               lr
  192 00000028         
  193 00000028 00000000        ltorg
  194 0000002C         ;/* the literal pools origin */
  195 0000002C         
  196 0000002C         SMRDATA
  197 0000002C 2201D110        dcd              (0+(B1_BWSCON<<4)+(B2_BWSCON<<8
)+(B3_BWSCON<<12)+(B4_BWSCON<<16)+(B5_BWSCON<<20)+(B6_BWSCON<<24)+(B7_BWSCON<<2
8))
  198 00000030 00000700        dcd              ((B0_Tacs<<13)+(B0_Tcos<<11)+(B
0_Tacc<<8)+(B0_Tcoh<<6)+(B0_Tah<<4)+(B0_Tacp<<2)+(B0_PMC))
  199 00000034 00000700        dcd              ((B1_Tacs<<13)+(B1_Tcos<<11)+(B
1_Tacc<<8)+(B1_Tcoh<<6)+(B1_Tah<<4)+(B1_Tacp<<2)+(B1_PMC))
  200 00000038 00000700        dcd              ((B2_Tacs<<13)+(B2_Tcos<<11)+(B
2_Tacc<<8)+(B2_Tcoh<<6)+(B2_Tah<<4)+(B2_Tacp<<2)+(B2_PMC))
  201 0000003C 00001F4C        dcd              ((B3_Tacs<<13)+(B3_Tcos<<11)+(B
3_Tacc<<8)+(B3_Tcoh<<6)+(B3_Tah<<4)+(B3_Tacp<<2)+(B3_PMC))
  202 00000040 00000700        dcd              ((B4_Tacs<<13)+(B4_Tcos<<11)+(B



ARM Macro Assembler    Page 6 


4_Tacc<<8)+(B4_Tcoh<<6)+(B4_Tah<<4)+(B4_Tacp<<2)+(B4_PMC))
  203 00000044 00000700        dcd              ((B5_Tacs<<13)+(B5_Tcos<<11)+(B
5_Tacc<<8)+(B5_Tcoh<<6)+(B5_Tah<<4)+(B5_Tacp<<2)+(B5_PMC))
  204 00000048 00018005        dcd              ((B6_MT<<15)+(B6_Trcd<<2)+(B6_S
CAN))
  205 0000004C 00018005        dcd              ((B7_MT<<15)+(B7_Trcd<<2)+(B7_S
CAN))
  206 00000050         ;/*    dcd ((REFEN<<23)+(TREFMD<<22)+(Trp<<20)+(Trc<<18)
                       +(Tchr<<16)+REFCNT) */ /* HJ_del 100MHz */
  207 00000050         ;/*    dcd 0x32  */       /* HJ_del 100MHz */
  208 00000050         ;/*    dcd 0x30  */       /* HJ_del 100MHz */ 
  209 00000050         ;/*    dcd 0x30  */       /* HJ_del 100MHz */
  210 00000050         ;/*    dcd ((REFEN<<23)+(TREFMD<<22)+(Trp<<20)+(Tsrc<<18
                       )+REFCNT) */  /* HJ_del 133MHz */
  211 00000050         ;/*    dcd 0xB2  */       /* HJ_del 133MHz */
  212 00000050         ;/*    dcd 0x20  */       /* HJ_del 133MHz */ 
  213 00000050         ;/*    dcd 0x20  */       /* HJ_del 133MHz */
  214 00000050 008E04F4        dcd              ((REFEN<<23)+(TREFMD<<22)+(Trp<
<20)+(Trc<<18)+(Tchr<<16)+REFCNT)
  215 00000054 00000032        dcd              0x32
  216 00000058 00000030        dcd              0x30
  217 0000005C 00000030        dcd              0x30
  218 00000060         
  219 00000060                 END
Command Line: --debug --xref --cpu=ARM920T --apcs=interwork --depend=.\sdram-jl
ink\lowlevel_init.d -o.\sdram-jlink\lowlevel_init.o -Id:\Keil\ARM\CMSIS\Include
 -Id:\Keil\ARM\INC\Samsung --list=.\sdram-jlink\lowlevel_init.lst ..\u-boot\boa
rd\samsung\tq2440\lowlevel_init.S
