


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; *  armboot - Startup Code for ARM920T CPU-core
    3 00000000         ; *
    4 00000000         ; *  Copyright (c) 2012  luoqindong<luoqindong123@163.co
                       m>
    5 00000000         ; *
    6 00000000         ; * See file CREDITS for list of people who contributed 
                       to this
    7 00000000         ; * project.
    8 00000000         ; *
    9 00000000         ; * This program is free software; you can redistribute 
                       it and/or
   10 00000000         ; * modify it under the terms of the GNU General Public 
                       License as
   11 00000000         ; * published by the Free Software Foundation; either ve
                       rsion 2 of
   12 00000000         ; * the License, or (at your option) any later version.
   13 00000000         ; *
   14 00000000         ; * This program is distributed in the hope that it will
                        be useful,
   15 00000000         ; * but WITHOUT ANY WARRANTY; without even the implied w
                       arranty of
   16 00000000         ; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
                         See the
   17 00000000         ; * GNU General Public License for more details.
   18 00000000         ; *
   19 00000000         ; * You should have received a copy of the GNU General P
                       ublic License
   20 00000000         ; * along with this program; if not, write to the Free S
                       oftware
   21 00000000         ; * Foundation, Inc., 59 Temple Place, Suite 330, Boston
                       ,
   22 00000000         ; * MA 02111-1307 USA
   23 00000000         ; */
   24 00000000         
   25 00000000         ; ******************************************************
                       *******************
   26 00000000         ; * config
   27 00000000         ; ******************************************************
                       *******************
   28 00000000         
   29 00000000 00000001 
                       CONFIG_START_FROM_RAM
                               equ              1
   30 00000000 00000001 
                       CONFIG_S3C2440
                               equ              1
   31 00000000 00000001 
                       CONFIG_TQ2440
                               equ              1
   32 00000000 00000000 
                       CONFIG_S3C2400
                               equ              0
   33 00000000 00000000 
                       CONFIG_S3C2410
                               equ              0
   34 00000000         
   35 00000000 00000000 
                       CONFIG_USE_IRQ



ARM Macro Assembler    Page 2 


                               equ              0
   36 00000000 00000000 
                       CONFIG_SKIP_LOWLEVEL_INIT
                               equ              0
   37 00000000 00000000 
                       CONFIG_SKIP_RELOCATE_UBOOT
                               equ              0
   38 00000000         
   39 00000000         ; must be same as in tq2440.h
   40 00000000 00030000 
                       CFG_MALLOC_LEN
                               equ              0x30000
   41 00000000 00000080 
                       CFG_GBL_DATA_SIZE
                               equ              128         ;/* 128 bytes for i
                                                            nitial data */
   42 00000000 00008000 
                       CONFIG_STACKSIZE
                               equ              (32*1024)   ;/* regular stack *
                                                            /
   43 00000000         
   44 00000000 33D00000 
                       TEXT_BASE
                               equ              0x33d00000
   45 00000000         
   46 00000000         
   47 00000000         ; ******************************************************
                       *******************
   48 00000000         ; * import
   49 00000000         ; ******************************************************
                       *******************
   50 00000000                 import           start_armboot
   51 00000000                 import           ||Image$$E_ZI$$ZI$$Base||
   52 00000000                 import           ||Image$$E_ZI$$ZI$$Limit||
   53 00000000                 import           clock_init
   54 00000000         
   55 00000000         
   56 00000000         ; ******************************************************
                       *******************
   57 00000000         ; * export
   58 00000000         ; ******************************************************
                       *******************
   59 00000000                 export           _armboot_start
   60 00000000                 export           _bss_start
   61 00000000         
   62 00000000                 IF               CONFIG_USE_IRQ = 1
   67                          ENDIF
   68 00000000         
   69 00000000         
   70 00000000         
   71 00000000         ;/*
   72 00000000         ; ******************************************************
                       *******************
   73 00000000         ; *
   74 00000000         ; * Jump vector table as in table 3.1 in [1]
   75 00000000         ; *
   76 00000000         ; ******************************************************
                       *******************
   77 00000000         ; */



ARM Macro Assembler    Page 3 


   78 00000000                 preserve8
   79 00000000                 area             start, code
   80 00000000                 arm
   81 00000000                 entry
   82 00000000         _start
   83 00000000 EA000011        b                start_code
   84 00000004 E59FF014        ldr              pc, _undefined_instruction
   85 00000008 E59FF014        ldr              pc, _software_interrupt
   86 0000000C E59FF014        ldr              pc, _prefetch_abort
   87 00000010 E59FF014        ldr              pc, _data_abort
   88 00000014 E59FF014        ldr              pc, _not_used
   89 00000018 E59FF014        ldr              pc, _irq
   90 0000001C E59FF014        ldr              pc, _fiq
   91 00000020         
   92 00000020                 ltorg
   93 00000020         
   94 00000020 00000000 
                       _undefined_instruction
                               dcd              start_code
   95 00000024 00000000 
                       _software_interrupt
                               dcd              start_code
   96 00000028 00000000 
                       _prefetch_abort
                               dcd              start_code
   97 0000002C 00000000 
                       _data_abort
                               dcd              start_code
   98 00000030 00000000 
                       _not_used
                               dcd              start_code
   99 00000034 00000000 
                       _irq    dcd              start_code
  100 00000038 00000000 
                       _fiq    dcd              start_code
  101 0000003C         
  102 0000003C         
  103 0000003C         ;/*
  104 0000003C         ; ******************************************************
                       *******************
  105 0000003C         ; *
  106 0000003C         ; * Startup Code (called from the ARM reset exception ve
                       ctor)
  107 0000003C         ; *
  108 0000003C         ; * do important init only if we don't start from memory
                       !
  109 0000003C         ; * relocate armboot to ram
  110 0000003C         ; * setup stack
  111 0000003C         ; * jump to second stage
  112 0000003C         ; *
  113 0000003C         ; ******************************************************
                       *******************
  114 0000003C         ; */
  115 0000003C         
  116 0000003C         _TEXT_BASE
  117 0000003C 33D00000        dcd              TEXT_BASE
  118 00000040         _armboot_start
  119 00000040 00000000        dcd              _start
  120 00000044         



ARM Macro Assembler    Page 4 


  121 00000044         ;/*
  122 00000044         ; * These are defined in the board-specific linker scrip
                       t.
  123 00000044         ; */    
  124 00000044         _bss_start
  125 00000044 00000000        dcd              ||Image$$E_ZI$$ZI$$Base||
  126 00000048         _bss_end
  127 00000048 00000000        dcd              ||Image$$E_ZI$$ZI$$Limit||
  128 0000004C         
  129 0000004C                 IF               CONFIG_USE_IRQ = 1
  138                          ENDIF
  139 0000004C         
  140 0000004C         
  141 0000004C         ;/*
  142 0000004C         ; * the actual start code
  143 0000004C         ; */
  144 0000004C         
  145 0000004C         start_code
  146 0000004C         ;/*
  147 0000004C         ; * set the cpu to SVC32 mode
  148 0000004C         ; */
  149 0000004C E10F0000        mrs              r0,cpsr
  150 00000050 E3C0001F        bic              r0,r0,#0x1f
  151 00000054 E38000D3        orr              r0,r0,#0xd3
  152 00000058 E12FF000        msr              cpsr_cxsf,r0
  153 0000005C         
  154 0000005C         ;bl coloured_LED_init
  155 0000005C         ;bl red_LED_on
  156 0000005C         
  157 0000005C                 IF               (CONFIG_S3C2400 = 1) || (CONFIG
_S3C2410 = 1) || (CONFIG_S3C2440 = 1)
  158 0000005C         
  159 0000005C                 IF               (CONFIG_S3C2400 = 1)
  164 0000005C 53000000 
                       pWTCON  equ              0x53000000
  165 0000005C 4A000008 
                       INTMSK  equ              0x4A000008
  166 0000005C 4A00001C 
                       INTSUBMSK
                               equ              0x4A00001C
  167 0000005C 4C000014 
                       CLKDIVN equ              0x4C000014
  168 0000005C                 ENDIF
  169 0000005C         ; disable watchdog
  170 0000005C E3A00453        ldr              r0, =pWTCON
  171 00000060 E3A01000        mov              r1, #0x0
  172 00000064 E5801000        str              r1, [r0]
  173 00000068         
  174 00000068         ;/*
  175 00000068         ; * mask all IRQs by setting all bits in the INTMR - def
                       ault
  176 00000068         ; */
  177 00000068 E3E01000        mov              r1, #0xffffffff
  178 0000006C E59F00C4        ldr              r0, =INTMSK
  179 00000070 E5801000        str              r1, [r0]
  180 00000074         
  181 00000074                 IF               CONFIG_S3C2410 = 1
  187                          ENDIF
  188 00000074         



ARM Macro Assembler    Page 5 


  189 00000074                 IF               CONFIG_S3C2440 = 1
  190 00000074         
  191 00000074 E59F10C0        ldr              r1, =0x7fff
  192 00000078 E59F00C0        ldr              r0, =INTSUBMSK
  193 0000007C E5801000        str              r1, [r0]
  194 00000080         
  195 00000080                 ENDIF
  196 00000080         
  197 00000080         ;/* FCLK:HCLK:PCLK = 1:2:4 */
  198 00000080         ;/* default FCLK is 120 MHz ! */
  199 00000080         ;ldr r0, =CLKDIVN
  200 00000080         ;mov r1, #3
  201 00000080         ;str r1, [r0]
  202 00000080                 ENDIF                        ;/* IF (CONFIG_S3C2
                                                            400 = 1) || (CONFIG
                                                            _S3C2410 = 1) || (C
                                                            ONFIG_S3C2440 = 1) 
                                                            */
  203 00000080         
  204 00000080         ;/*
  205 00000080         ; * we do sys-critical inits only at reboot,
  206 00000080         ; * not when booting from ram!
  207 00000080         ; */
  208 00000080                 IF               CONFIG_SKIP_LOWLEVEL_INIT = 0
  209 00000080         
  210 00000080 EB000018        bl               cpu_init_crit
  211 00000084         
  212 00000084                 ENDIF
  213 00000084         
  214 00000084         ;/* Set up the stack  */
  215 00000084         stack_setup
  216 00000084 E51F0050        ldr              r0, _TEXT_BASE ;/* upper 128 Ki
                                                            B: relocated uboot 
                                                            */
  217 00000088 E2400803        sub              r0, r0, #CFG_MALLOC_LEN ;/* mal
                                                            loc area           
                                                                      */
  218 0000008C E2400080        sub              r0, r0, #CFG_GBL_DATA_SIZE 
                                                            ;/* bdinfo       */
                                                            
  219 00000090         
  220 00000090                 IF               CONFIG_USE_IRQ = 1
  224                          ENDIF
  225 00000090         
  226 00000090 E240D00C        sub              sp, r0, #12 ;/* leave 3 words f
                                                            or abort-stack   */
                                                             
  227 00000094 EBFFFFFE        bl               clock_init  ;/* setup system cl
                                                            ock        */
  228 00000098         
  229 00000098         
  230 00000098                 IF               CONFIG_SKIP_RELOCATE_UBOOT = 0
  231 00000098         
  232 00000098         relocate                             ;/* relocate U-Boot
                                                             to RAM       */
  233 00000098 E24F00A0        adr              r0, _start  ;/* r0 <- current p
                                                            osition of code   *
                                                            /
  234 0000009C E51F1068        ldr              r1, _TEXT_BASE ;/* test if we r



ARM Macro Assembler    Page 6 


                                                            un from flash or RA
                                                            M */
  235 000000A0 E1500001        cmp              r0, r1      ;/* don't reloc dur
                                                            ing debug         *
                                                            /
  236 000000A4 0A000007        beq              clear_bss
  237 000000A8         
  238 000000A8 E51F2070        ldr              r2, _armboot_start
  239 000000AC E51F3070        ldr              r3, _bss_start
  240 000000B0 E0432002        sub              r2, r3, r2  ;/* r2 <- size of a
                                                            rmboot            *
                                                            /
  241 000000B4 E0802002        add              r2, r0, r2  ;/* r2 <- source en
                                                            d address         *
                                                            /
  242 000000B8         
  243 000000B8         copy_loop
  244 000000B8 E8B007F8        ldmia            r0!, {r3-r10} ;/* copy from sou
                                                            rce address [r0]   
                                                             */
  245 000000BC E8A107F8        stmia            r1!, {r3-r10} ;/* copy to   tar
                                                            get address [r1]   
                                                             */
  246 000000C0 E1500002        cmp              r0, r2      ;/* until source en
                                                            d addreee [r2]    *
                                                            /
  247 000000C4 DAFFFFFB        ble              copy_loop
  248 000000C8         
  249 000000C8                 ENDIF                        ;/* CONFIG_SKIP_REL
                                                            OCATE_UBOOT = 0 */
  250 000000C8         
  251 000000C8         clear_bss
  252 000000C8 E51F008C        ldr              r0, _bss_start ;/* find start o
                                                            f bss segment      
                                                              */
  253 000000CC E51F108C        ldr              r1, _bss_end ;/* stop here     
                                                                               
                                                            */
  254 000000D0 E3A02000        mov              r2, #0x00000000 ;/* clear      
                                                                               
                                                               */
  255 000000D4         
  256 000000D4         clbss_l
  257 000000D4 E5802000        str              r2, [r0]    ;/* clear loop...  
                                                                              *
                                                            /
  258 000000D8 E2800004        add              r0, r0, #4
  259 000000DC E1500001        cmp              r0, r1
  260 000000E0 DAFFFFFB        ble              clbss_l
  261 000000E4         
  262 000000E4 E59FF058        ldr              pc, =start_armboot
  263 000000E8         ;/*
  264 000000E8         ; ******************************************************
                       *******************
  265 000000E8         ; *
  266 000000E8         ; * CPU_init_critical registers
  267 000000E8         ; *
  268 000000E8         ; * setup important registers
  269 000000E8         ; * setup memory timing



ARM Macro Assembler    Page 7 


  270 000000E8         ; *
  271 000000E8         ; ******************************************************
                       *******************
  272 000000E8         ; */
  273 000000E8         
  274 000000E8                 IF               CONFIG_SKIP_LOWLEVEL_INIT = 0
  275 000000E8         cpu_init_crit
  276 000000E8         ;/*
  277 000000E8         ; * flush v4 I/D caches
  278 000000E8         ; */
  279 000000E8 E3A00000        mov              r0, #0
  280 000000EC EE070F17        mcr              p15, 0, r0, c7, c7, 0 ;/* flush
                                                             v3/v4 cache */
  281 000000F0 EE080F17        mcr              p15, 0, r0, c8, c7, 0 
                                                            ;/* flush v4 TLB */
                                                            
  282 000000F4         
  283 000000F4         ;/*
  284 000000F4         ; * disable MMU stuff and caches
  285 000000F4         ; */
  286 000000F4 EE110F10        mrc              p15, 0, r0, c1, c0, 0
  287 000000F8 E3C00C23        bic              r0, r0, #0x00002300 ;@ clear bi
                                                            ts 13, 9:8 (--V- --
                                                            RS)
  288 000000FC E3C00087        bic              r0, r0, #0x00000087 ;@ clear bi
                                                            ts 7, 2:0 (B--- -CA
                                                            M)
  289 00000100 E3800002        orr              r0, r0, #0x00000002 ;@ set bit 
                                                            2 (A) Align
  290 00000104 E3800A01        orr              r0, r0, #0x00001000 ;@ set bit 
                                                            12 (I) I-Cache
  291 00000108 EE010F10        mcr              p15, 0, r0, c1, c0, 0
  292 0000010C         
  293 0000010C         ;/*
  294 0000010C         ; * before relocating, we have to setup RAM timing
  295 0000010C         ; * because memory timing is board-dependend, you will
  296 0000010C         ; * find a lowlevel_init.S in your board directory.
  297 0000010C         ; */
  298 0000010C         
  299 0000010C                 IF               CONFIG_START_FROM_RAM = 0
  305                          ENDIF
  306 0000010C         
  307 0000010C E12FFF1E        bx               lr
  308 00000110         
  309 00000110                 ENDIF                        ;/* CONFIG_SKIP_LOW
                                                            LEVEL_INIT */
  310 00000110         
  311 00000110                 IF               CONFIG_TQ2440 = 1
  312 00000110         
  313 00000110                 INCLUDE          ..\u-boot\board\samsung\tq2440\
lowlevel_init.S
    1 00000110         ;/*
    2 00000110         ; * Memory Setup stuff - taken from blob memsetup.S
    3 00000110         ; *
    4 00000110         ; * Copyright (C) 1999 2000 2001 Erik Mouw (J.A.K.Mouw@i
                       ts.tudelft.nl) and
    5 00000110         ; *                     Jan-Derk Bakker (J.D.Bakker@its.
                       tudelft.nl)
    6 00000110         ; *



ARM Macro Assembler    Page 8 


    7 00000110         ; * Modified for the Samsung SMDK2410 by
    8 00000110         ; * (C) Copyright 2002
    9 00000110         ; * David Mueller, ELSOFT AG, <d.mueller@elsoft.ch>
   10 00000110         ; *
   11 00000110         ; * See file CREDITS for list of people who contributed 
                       to this
   12 00000110         ; * project.
   13 00000110         ; *
   14 00000110         ; * This program is free software; you can redistribute 
                       it and/or
   15 00000110         ; * modify it under the terms of the GNU General Public 
                       License as
   16 00000110         ; * published by the Free Software Foundation; either ve
                       rsion 2 of
   17 00000110         ; * the License, or (at your option) any later version.
   18 00000110         ; *
   19 00000110         ; * This program is distributed in the hope that it will
                        be useful,
   20 00000110         ; * but WITHOUT ANY WARRANTY; without even the implied w
                       arranty of
   21 00000110         ; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
                         See the
   22 00000110         ; * GNU General Public License for more details.
   23 00000110         ; *
   24 00000110         ; * You should have received a copy of the GNU General P
                       ublic License
   25 00000110         ; * along with this program; if not, write to the Free S
                       oftware
   26 00000110         ; * Foundation, Inc., 59 Temple Place, Suite 330, Boston
                       ,
   27 00000110         ; * MA 02111-1307 USA
   28 00000110         ; */
   29 00000110         
   30 00000110         
   31 00000110         ;#include <config.h>
   32 00000110         ;#include <version.h>
   33 00000110         
   34 00000110         
   35 00000110         ;/* some parameters for the board */
   36 00000110         
   37 00000110         ;/*
   38 00000110         ; *
   39 00000110         ; * Taken from linux/arch/arm/boot/compressed/head-s3c24
                       10.S
   40 00000110         ; *
   41 00000110         ; * Copyright (C) 2002 Samsung Electronics SW.LEE  <hitc
                       hcar@sec.samsung.com>
   42 00000110         ; *
   43 00000110         ; */
   44 00000110         
   45 00000110 00000000 
                       CONFIG_133MHZ_SDRAM
                               equ              0
   46 00000110 00000000 
                       CONFIG_128MB_SDRAM
                               equ              0
   47 00000110         
   48 00000110 48000000 
                       BWSCON  equ              0x48000000



ARM Macro Assembler    Page 9 


   49 00000110         
   50 00000110         ;/* BWSCON */
   51 00000110 00000000 
                       DW8     equ              (0x0)
   52 00000110 00000001 
                       DW16    equ              (0x1)
   53 00000110 00000002 
                       DW32    equ              (0x2)
   54 00000110 00000004 
                       WAIT    equ              (0x1<<2)
   55 00000110 00000008 
                       UBLB    equ              (0x1<<3)
   56 00000110         
   57 00000110 00000001 
                       B1_BWSCON
                               equ              (DW16)
   58 00000110 00000001 
                       B2_BWSCON
                               equ              (DW16)
   59 00000110 0000000D 
                       B3_BWSCON
                               equ              (DW16 + WAIT + UBLB)
   60 00000110 00000001 
                       B4_BWSCON
                               equ              (DW16)
   61 00000110 00000000 
                       B5_BWSCON
                               equ              (DW8)
   62 00000110 00000002 
                       B6_BWSCON
                               equ              (DW32)
   63 00000110 00000002 
                       B7_BWSCON
                               equ              (DW32)
   64 00000110         
   65 00000110         ;/* BANK0CON */
   66 00000110 00000000 
                       B0_Tacs equ              0x0         ;/*  0clk */
   67 00000110 00000000 
                       B0_Tcos equ              0x0         ;/*  0clk */
   68 00000110 00000007 
                       B0_Tacc equ              0x7         ;/* 14clk */
   69 00000110 00000000 
                       B0_Tcoh equ              0x0         ;/*  0clk */
   70 00000110 00000000 
                       B0_Tah  equ              0x0         ;/*  0clk */
   71 00000110 00000000 
                       B0_Tacp equ              0x0
   72 00000110 00000000 
                       B0_PMC  equ              0x0         ;/* normal */
   73 00000110         
   74 00000110         ;/* BANK1CON */
   75 00000110 00000000 
                       B1_Tacs equ              0x0         ;/*  0clk */
   76 00000110 00000000 
                       B1_Tcos equ              0x0         ;/*  0clk */
   77 00000110 00000007 
                       B1_Tacc equ              0x7         ;/* 14clk */
   78 00000110 00000000 



ARM Macro Assembler    Page 10 


                       B1_Tcoh equ              0x0         ;/*  0clk */
   79 00000110 00000000 
                       B1_Tah  equ              0x0         ;/*  0clk */
   80 00000110 00000000 
                       B1_Tacp equ              0x0
   81 00000110 00000000 
                       B1_PMC  equ              0x0
   82 00000110         
   83 00000110 00000000 
                       B2_Tacs equ              0x0
   84 00000110 00000000 
                       B2_Tcos equ              0x0
   85 00000110 00000007 
                       B2_Tacc equ              0x7
   86 00000110 00000000 
                       B2_Tcoh equ              0x0
   87 00000110 00000000 
                       B2_Tah  equ              0x0
   88 00000110 00000000 
                       B2_Tacp equ              0x0
   89 00000110 00000000 
                       B2_PMC  equ              0x0
   90 00000110         
   91 00000110 00000000 
                       B3_Tacs equ              0x0         ;/*  0clk */
   92 00000110 00000003 
                       B3_Tcos equ              0x3         ;/*  4clk */
   93 00000110 00000007 
                       B3_Tacc equ              0x7         ;/* 14clk */
   94 00000110 00000001 
                       B3_Tcoh equ              0x1         ;/*  1clk */
   95 00000110 00000000 
                       B3_Tah  equ              0x0         ;/*  0clk */
   96 00000110 00000003 
                       B3_Tacp equ              0x3         ;/*  6clk */
   97 00000110 00000000 
                       B3_PMC  equ              0x0         ;/* normal */
   98 00000110         
   99 00000110 00000000 
                       B4_Tacs equ              0x0         ;/*  0clk */
  100 00000110 00000000 
                       B4_Tcos equ              0x0         ;/*  0clk */
  101 00000110 00000007 
                       B4_Tacc equ              0x7         ;/* 14clk */
  102 00000110 00000000 
                       B4_Tcoh equ              0x0         ;/*  0clk */
  103 00000110 00000000 
                       B4_Tah  equ              0x0         ;/*  0clk */
  104 00000110 00000000 
                       B4_Tacp equ              0x0
  105 00000110 00000000 
                       B4_PMC  equ              0x0         ;/* normal */
  106 00000110         
  107 00000110 00000000 
                       B5_Tacs equ              0x0         ;/*  0clk */
  108 00000110 00000000 
                       B5_Tcos equ              0x0         ;/*  0clk */
  109 00000110 00000007 
                       B5_Tacc equ              0x7         ;/* 14clk */



ARM Macro Assembler    Page 11 


  110 00000110 00000000 
                       B5_Tcoh equ              0x0         ;/*  0clk */
  111 00000110 00000000 
                       B5_Tah  equ              0x0         ;/*  0clk */
  112 00000110 00000000 
                       B5_Tacp equ              0x0
  113 00000110 00000000 
                       B5_PMC  equ              0x0         ;/* normal */
  114 00000110         
  115 00000110 00000003 
                       B6_MT   equ              0x3         ;/* SDRAM */
  116 00000110         ;/* B6_Trcd     0x1 *//* 3clk */ /*HJ_del 100MHz */
  117 00000110         ;/* B6_SCAN  0x1 *//* 9bit */ /*HJ_del 64MB SDRAM */
  118 00000110         ;/* B6_Trcd     0x0 *//* 2clk */ /*HJ_del 133MHz */
  119 00000110         ;/* B6_SCAN  0x2 *//* 10bit */ /*HJ_del 128MB SDRAM */
  120 00000110                 IF               CONFIG_133MHZ_SDRAM = 1
  123 00000110 00000001 
                       B6_Trcd equ              0x1
  124 00000110                 ENDIF
  125 00000110         
  126 00000110                 IF               CONFIG_128MB_SDRAM = 1
  129 00000110 00000001 
                       B6_SCAN equ              0x1
  130 00000110                 ENDIF
  131 00000110         
  132 00000110 00000003 
                       B7_MT   equ              0x3         ;/* SDRAM */
  133 00000110         ;/* B7_Trcd    0x1 *//* 3clk */ /*HJ_del 100MHz */
  134 00000110         ;/* B7_SCAN  0x1 *//* 9bit */ /*HJ_del 64MB SDRAM */
  135 00000110         ;/* B7_Trcd     0x0 *//* 2clk */ /*HJ_add 133MHz */
  136 00000110         ;/* B7_SCAN  0x2 *//* 10bit */ /*HJ_del 128MB SDRAM */
  137 00000110                 IF               CONFIG_133MHZ_SDRAM = 1
  140 00000110 00000001 
                       B7_Trcd equ              0x1
  141 00000110                 ENDIF
  142 00000110         
  143 00000110                 IF               CONFIG_128MB_SDRAM = 1
  146 00000110 00000001 
                       B7_SCAN equ              0x1
  147 00000110                 ENDIF
  148 00000110         
  149 00000110         ;/* REFRESH parameter */
  150 00000110 00000001 
                       REFEN   equ              0x1         ;/* Refresh enable 
                                                            */
  151 00000110 00000000 
                       TREFMD  equ              0x0         ;/* CBR(CAS before 
                                                            RAS)/Auto refresh *
                                                            /
  152 00000110         ;/* Trp    0x0 *//* 2clk */      /* HJ_del 100MHz */
  153 00000110         ;/* Trc       0x3 *//* 7clk */      /* HJ_del 100MHz */
  154 00000110         ;/* Tchr    0x2 *//* 3clk */      /* HJ_del 100MHz */
  155 00000110         ;/* REFCNT    0x4f4 *//* period=7.8125us, HCLK=100Mhz, (
                       2048+1-7.8125*100) */ /* HJ_del 100MHz */
  156 00000110         ;/* Trp    0x1 *//* 3clk */      /* HJ_del 133MHz */
  157 00000110         ;/* Tsrc       0x3 *//* 7clk */      /* HJ_del 133MHz */
                       
  158 00000110         ;/* REFCNT    0x3f4 *//* period=7.8125us, HCLK=133Mhz, (
                       2048+1-7.8125*133) */ /* HJ_del 133MHz */



ARM Macro Assembler    Page 12 


  159 00000110                 IF               CONFIG_133MHZ_SDRAM = 1
  164 00000110 00000000 
                       Trp     equ              0x0
  165 00000110 00000003 
                       Trc     equ              0x3
  166 00000110 00000002 
                       Tchr    equ              0x2
  167 00000110 000004F4 
                       REFCNT  equ              0x4f4
  168 00000110                 ENDIF
  169 00000110         ;/**************************************/
  170 00000110         
  171 00000110         ;preserve8
  172 00000110         ;area    lowlevel, code
  173 00000110         ;arm
  174 00000110         
  175 00000110         lowlevel_init
  176 00000110         ;/* memory control configuration */
  177 00000110         ;/* make r0 relative the current location so that it */
  178 00000110         ;/* reads SMRDATA out of FLASH rather than memory ! */
  179 00000110 E59F0030        ldr              r0, =SMRDATA
  180 00000114 E51F10E0        ldr              r1, _TEXT_BASE
  181 00000118 E0400001        sub              r0, r0, r1
  182 0000011C E3A01312        ldr              r1, =BWSCON ;/* Bus Width Statu
                                                            s Controller */
  183 00000120 E2802034        add              r2, r0, #13*4
  184 00000124         loop
  185 00000124 E4903004        ldr              r3, [r0], #4
  186 00000128 E4813004        str              r3, [r1], #4
  187 0000012C E1520000        cmp              r2, r0
  188 00000130 1AFFFFFB        bne              loop
  189 00000134         
  190 00000134         ;/* everything is fine now */
  191 00000134 E12FFF1E        bx               lr
  192 00000138         
  193 00000138 4A000008 
              00007FFF 
              4A00001C 
              00000000 
              00000000         ltorg
  194 0000014C         ;/* the literal pools origin */
  195 0000014C         
  196 0000014C         SMRDATA
  197 0000014C 2201D110        dcd              (0+(B1_BWSCON<<4)+(B2_BWSCON<<8
)+(B3_BWSCON<<12)+(B4_BWSCON<<16)+(B5_BWSCON<<20)+(B6_BWSCON<<24)+(B7_BWSCON<<2
8))
  198 00000150 00000700        dcd              ((B0_Tacs<<13)+(B0_Tcos<<11)+(B
0_Tacc<<8)+(B0_Tcoh<<6)+(B0_Tah<<4)+(B0_Tacp<<2)+(B0_PMC))
  199 00000154 00000700        dcd              ((B1_Tacs<<13)+(B1_Tcos<<11)+(B
1_Tacc<<8)+(B1_Tcoh<<6)+(B1_Tah<<4)+(B1_Tacp<<2)+(B1_PMC))
  200 00000158 00000700        dcd              ((B2_Tacs<<13)+(B2_Tcos<<11)+(B
2_Tacc<<8)+(B2_Tcoh<<6)+(B2_Tah<<4)+(B2_Tacp<<2)+(B2_PMC))
  201 0000015C 00001F4C        dcd              ((B3_Tacs<<13)+(B3_Tcos<<11)+(B
3_Tacc<<8)+(B3_Tcoh<<6)+(B3_Tah<<4)+(B3_Tacp<<2)+(B3_PMC))
  202 00000160 00000700        dcd              ((B4_Tacs<<13)+(B4_Tcos<<11)+(B
4_Tacc<<8)+(B4_Tcoh<<6)+(B4_Tah<<4)+(B4_Tacp<<2)+(B4_PMC))
  203 00000164 00000700        dcd              ((B5_Tacs<<13)+(B5_Tcos<<11)+(B
5_Tacc<<8)+(B5_Tcoh<<6)+(B5_Tah<<4)+(B5_Tacp<<2)+(B5_PMC))
  204 00000168 00018005        dcd              ((B6_MT<<15)+(B6_Trcd<<2)+(B6_S



ARM Macro Assembler    Page 13 


CAN))
  205 0000016C 00018005        dcd              ((B7_MT<<15)+(B7_Trcd<<2)+(B7_S
CAN))
  206 00000170         ;/*    dcd ((REFEN<<23)+(TREFMD<<22)+(Trp<<20)+(Trc<<18)
                       +(Tchr<<16)+REFCNT) */ /* HJ_del 100MHz */
  207 00000170         ;/*    dcd 0x32  */       /* HJ_del 100MHz */
  208 00000170         ;/*    dcd 0x30  */       /* HJ_del 100MHz */ 
  209 00000170         ;/*    dcd 0x30  */       /* HJ_del 100MHz */
  210 00000170         ;/*    dcd ((REFEN<<23)+(TREFMD<<22)+(Trp<<20)+(Tsrc<<18
                       )+REFCNT) */  /* HJ_del 133MHz */
  211 00000170         ;/*    dcd 0xB2  */       /* HJ_del 133MHz */
  212 00000170         ;/*    dcd 0x20  */       /* HJ_del 133MHz */ 
  213 00000170         ;/*    dcd 0x20  */       /* HJ_del 133MHz */
  214 00000170 008E04F4        dcd              ((REFEN<<23)+(TREFMD<<22)+(Trp<
<20)+(Trc<<18)+(Tchr<<16)+REFCNT)
  215 00000174 00000032        dcd              0x32
  216 00000178 00000030        dcd              0x30
  217 0000017C 00000030        dcd              0x30
  218 00000180         
  219 00000180                 END
  314 00000180         
  315 00000180                 ENDIF
  316 00000180         ;/*
  317 00000180         ; ******************************************************
                       *******************
  318 00000180         ; *
  319 00000180         ; * Interrupt handling
  320 00000180         ; *
  321 00000180         ; ******************************************************
                       *******************
  322 00000180         ; */
  323 00000180                 END
Command Line: --debug --xref --cpu=ARM920T --apcs=interwork --depend=.\sdram-jl
ink\start.d -o.\sdram-jlink\start.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\
CMSIS\Include -IC:\Keil_v5\ARM\Inc\Samsung --list=.\sdram-jlink\start.lst ..\u-
boot\cpu\arm920t\start.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SMRDATA 0000014C

Symbol: SMRDATA
   Definitions
      At line 196 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 179 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: SMRDATA used once
_TEXT_BASE 0000003C

Symbol: _TEXT_BASE
   Definitions
      At line 116 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 216 in file ..\u-boot\cpu\arm920t\start.S
      At line 234 in file ..\u-boot\cpu\arm920t\start.S
      At line 180 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S

_armboot_start 00000040

Symbol: _armboot_start
   Definitions
      At line 118 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 59 in file ..\u-boot\cpu\arm920t\start.S
      At line 238 in file ..\u-boot\cpu\arm920t\start.S

_bss_end 00000048

Symbol: _bss_end
   Definitions
      At line 126 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 253 in file ..\u-boot\cpu\arm920t\start.S
Comment: _bss_end used once
_bss_start 00000044

Symbol: _bss_start
   Definitions
      At line 124 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 60 in file ..\u-boot\cpu\arm920t\start.S
      At line 239 in file ..\u-boot\cpu\arm920t\start.S
      At line 252 in file ..\u-boot\cpu\arm920t\start.S

_data_abort 0000002C

Symbol: _data_abort
   Definitions
      At line 97 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 87 in file ..\u-boot\cpu\arm920t\start.S
Comment: _data_abort used once
_fiq 00000038

Symbol: _fiq
   Definitions
      At line 100 in file ..\u-boot\cpu\arm920t\start.S
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 90 in file ..\u-boot\cpu\arm920t\start.S
Comment: _fiq used once
_irq 00000034

Symbol: _irq
   Definitions
      At line 99 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 89 in file ..\u-boot\cpu\arm920t\start.S
Comment: _irq used once
_not_used 00000030

Symbol: _not_used
   Definitions
      At line 98 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 88 in file ..\u-boot\cpu\arm920t\start.S
Comment: _not_used used once
_prefetch_abort 00000028

Symbol: _prefetch_abort
   Definitions
      At line 96 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 86 in file ..\u-boot\cpu\arm920t\start.S
Comment: _prefetch_abort used once
_software_interrupt 00000024

Symbol: _software_interrupt
   Definitions
      At line 95 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 85 in file ..\u-boot\cpu\arm920t\start.S
Comment: _software_interrupt used once
_start 00000000

Symbol: _start
   Definitions
      At line 82 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 119 in file ..\u-boot\cpu\arm920t\start.S
      At line 233 in file ..\u-boot\cpu\arm920t\start.S

_undefined_instruction 00000020

Symbol: _undefined_instruction
   Definitions
      At line 94 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 84 in file ..\u-boot\cpu\arm920t\start.S
Comment: _undefined_instruction used once
clbss_l 000000D4

Symbol: clbss_l
   Definitions
      At line 256 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 260 in file ..\u-boot\cpu\arm920t\start.S
Comment: clbss_l used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

clear_bss 000000C8

Symbol: clear_bss
   Definitions
      At line 251 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 236 in file ..\u-boot\cpu\arm920t\start.S
Comment: clear_bss used once
copy_loop 000000B8

Symbol: copy_loop
   Definitions
      At line 243 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 247 in file ..\u-boot\cpu\arm920t\start.S
Comment: copy_loop used once
cpu_init_crit 000000E8

Symbol: cpu_init_crit
   Definitions
      At line 275 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 210 in file ..\u-boot\cpu\arm920t\start.S
Comment: cpu_init_crit used once
loop 00000124

Symbol: loop
   Definitions
      At line 184 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 188 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: loop used once
lowlevel_init 00000110

Symbol: lowlevel_init
   Definitions
      At line 175 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      None
Comment: lowlevel_init unused
relocate 00000098

Symbol: relocate
   Definitions
      At line 232 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      None
Comment: relocate unused
stack_setup 00000084

Symbol: stack_setup
   Definitions
      At line 215 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      None
Comment: stack_setup unused
start 00000000

Symbol: start



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 79 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      None
Comment: start unused
start_code 0000004C

Symbol: start_code
   Definitions
      At line 145 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 83 in file ..\u-boot\cpu\arm920t\start.S
      At line 94 in file ..\u-boot\cpu\arm920t\start.S
      At line 95 in file ..\u-boot\cpu\arm920t\start.S
      At line 96 in file ..\u-boot\cpu\arm920t\start.S
      At line 97 in file ..\u-boot\cpu\arm920t\start.S
      At line 98 in file ..\u-boot\cpu\arm920t\start.S
      At line 99 in file ..\u-boot\cpu\arm920t\start.S
      At line 100 in file ..\u-boot\cpu\arm920t\start.S

23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

B0_PMC 00000000

Symbol: B0_PMC
   Definitions
      At line 72 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 198 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B0_PMC used once
B0_Tacc 00000007

Symbol: B0_Tacc
   Definitions
      At line 68 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 198 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B0_Tacc used once
B0_Tacp 00000000

Symbol: B0_Tacp
   Definitions
      At line 71 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 198 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B0_Tacp used once
B0_Tacs 00000000

Symbol: B0_Tacs
   Definitions
      At line 66 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 198 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B0_Tacs used once
B0_Tah 00000000

Symbol: B0_Tah
   Definitions
      At line 70 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 198 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B0_Tah used once
B0_Tcoh 00000000

Symbol: B0_Tcoh
   Definitions
      At line 69 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 198 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B0_Tcoh used once
B0_Tcos 00000000

Symbol: B0_Tcos
   Definitions
      At line 67 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 198 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B0_Tcos used once
B1_BWSCON 00000001

Symbol: B1_BWSCON



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 57 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 197 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_BWSCON used once
B1_PMC 00000000

Symbol: B1_PMC
   Definitions
      At line 81 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 199 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_PMC used once
B1_Tacc 00000007

Symbol: B1_Tacc
   Definitions
      At line 77 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 199 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_Tacc used once
B1_Tacp 00000000

Symbol: B1_Tacp
   Definitions
      At line 80 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 199 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_Tacp used once
B1_Tacs 00000000

Symbol: B1_Tacs
   Definitions
      At line 75 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 199 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_Tacs used once
B1_Tah 00000000

Symbol: B1_Tah
   Definitions
      At line 79 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 199 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_Tah used once
B1_Tcoh 00000000

Symbol: B1_Tcoh
   Definitions
      At line 78 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 199 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_Tcoh used once
B1_Tcos 00000000

Symbol: B1_Tcos
   Definitions
      At line 76 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 199 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B1_Tcos used once
B2_BWSCON 00000001

Symbol: B2_BWSCON
   Definitions
      At line 58 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 197 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_BWSCON used once
B2_PMC 00000000

Symbol: B2_PMC
   Definitions
      At line 89 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 200 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_PMC used once
B2_Tacc 00000007

Symbol: B2_Tacc
   Definitions
      At line 85 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 200 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_Tacc used once
B2_Tacp 00000000

Symbol: B2_Tacp
   Definitions
      At line 88 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 200 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_Tacp used once
B2_Tacs 00000000

Symbol: B2_Tacs
   Definitions
      At line 83 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 200 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_Tacs used once
B2_Tah 00000000

Symbol: B2_Tah
   Definitions
      At line 87 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 200 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_Tah used once
B2_Tcoh 00000000

Symbol: B2_Tcoh
   Definitions
      At line 86 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 200 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_Tcoh used once
B2_Tcos 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: B2_Tcos
   Definitions
      At line 84 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 200 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B2_Tcos used once
B3_BWSCON 0000000D

Symbol: B3_BWSCON
   Definitions
      At line 59 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 197 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_BWSCON used once
B3_PMC 00000000

Symbol: B3_PMC
   Definitions
      At line 97 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 201 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_PMC used once
B3_Tacc 00000007

Symbol: B3_Tacc
   Definitions
      At line 93 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 201 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_Tacc used once
B3_Tacp 00000003

Symbol: B3_Tacp
   Definitions
      At line 96 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 201 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_Tacp used once
B3_Tacs 00000000

Symbol: B3_Tacs
   Definitions
      At line 91 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 201 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_Tacs used once
B3_Tah 00000000

Symbol: B3_Tah
   Definitions
      At line 95 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 201 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_Tah used once
B3_Tcoh 00000001

Symbol: B3_Tcoh
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 94 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 201 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_Tcoh used once
B3_Tcos 00000003

Symbol: B3_Tcos
   Definitions
      At line 92 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 201 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B3_Tcos used once
B4_BWSCON 00000001

Symbol: B4_BWSCON
   Definitions
      At line 60 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 197 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B4_BWSCON used once
B4_PMC 00000000

Symbol: B4_PMC
   Definitions
      At line 105 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 202 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B4_PMC used once
B4_Tacc 00000007

Symbol: B4_Tacc
   Definitions
      At line 101 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 202 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B4_Tacc used once
B4_Tacp 00000000

Symbol: B4_Tacp
   Definitions
      At line 104 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 202 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B4_Tacp used once
B4_Tacs 00000000

Symbol: B4_Tacs
   Definitions
      At line 99 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 202 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B4_Tacs used once
B4_Tah 00000000

Symbol: B4_Tah
   Definitions
      At line 103 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 202 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Comment: B4_Tah used once
B4_Tcoh 00000000

Symbol: B4_Tcoh
   Definitions
      At line 102 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 202 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B4_Tcoh used once
B4_Tcos 00000000

Symbol: B4_Tcos
   Definitions
      At line 100 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 202 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B4_Tcos used once
B5_BWSCON 00000000

Symbol: B5_BWSCON
   Definitions
      At line 61 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 197 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_BWSCON used once
B5_PMC 00000000

Symbol: B5_PMC
   Definitions
      At line 113 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 203 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_PMC used once
B5_Tacc 00000007

Symbol: B5_Tacc
   Definitions
      At line 109 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 203 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_Tacc used once
B5_Tacp 00000000

Symbol: B5_Tacp
   Definitions
      At line 112 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 203 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_Tacp used once
B5_Tacs 00000000

Symbol: B5_Tacs
   Definitions
      At line 107 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 203 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_Tacs used once
B5_Tah 00000000




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: B5_Tah
   Definitions
      At line 111 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 203 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_Tah used once
B5_Tcoh 00000000

Symbol: B5_Tcoh
   Definitions
      At line 110 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 203 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_Tcoh used once
B5_Tcos 00000000

Symbol: B5_Tcos
   Definitions
      At line 108 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 203 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B5_Tcos used once
B6_BWSCON 00000002

Symbol: B6_BWSCON
   Definitions
      At line 62 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 197 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B6_BWSCON used once
B6_MT 00000003

Symbol: B6_MT
   Definitions
      At line 115 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 204 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B6_MT used once
B6_SCAN 00000001

Symbol: B6_SCAN
   Definitions
      At line 129 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 204 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B6_SCAN used once
B6_Trcd 00000001

Symbol: B6_Trcd
   Definitions
      At line 123 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 204 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B6_Trcd used once
B7_BWSCON 00000002

Symbol: B7_BWSCON
   Definitions
      At line 63 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 197 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B7_BWSCON used once
B7_MT 00000003

Symbol: B7_MT
   Definitions
      At line 132 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 205 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B7_MT used once
B7_SCAN 00000001

Symbol: B7_SCAN
   Definitions
      At line 146 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 205 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B7_SCAN used once
B7_Trcd 00000001

Symbol: B7_Trcd
   Definitions
      At line 140 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 205 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: B7_Trcd used once
BWSCON 48000000

Symbol: BWSCON
   Definitions
      At line 48 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 182 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: BWSCON used once
CFG_GBL_DATA_SIZE 00000080

Symbol: CFG_GBL_DATA_SIZE
   Definitions
      At line 41 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 218 in file ..\u-boot\cpu\arm920t\start.S
Comment: CFG_GBL_DATA_SIZE used once
CFG_MALLOC_LEN 00030000

Symbol: CFG_MALLOC_LEN
   Definitions
      At line 40 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 217 in file ..\u-boot\cpu\arm920t\start.S
Comment: CFG_MALLOC_LEN used once
CLKDIVN 4C000014

Symbol: CLKDIVN
   Definitions
      At line 167 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      None
Comment: CLKDIVN unused



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

CONFIG_128MB_SDRAM 00000000

Symbol: CONFIG_128MB_SDRAM
   Definitions
      At line 46 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 126 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
      At line 143 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S

CONFIG_133MHZ_SDRAM 00000000

Symbol: CONFIG_133MHZ_SDRAM
   Definitions
      At line 45 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 120 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
      At line 137 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
      At line 159 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S

CONFIG_S3C2400 00000000

Symbol: CONFIG_S3C2400
   Definitions
      At line 32 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 157 in file ..\u-boot\cpu\arm920t\start.S
      At line 159 in file ..\u-boot\cpu\arm920t\start.S

CONFIG_S3C2410 00000000

Symbol: CONFIG_S3C2410
   Definitions
      At line 33 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 157 in file ..\u-boot\cpu\arm920t\start.S
      At line 181 in file ..\u-boot\cpu\arm920t\start.S

CONFIG_S3C2440 00000001

Symbol: CONFIG_S3C2440
   Definitions
      At line 30 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 157 in file ..\u-boot\cpu\arm920t\start.S
      At line 189 in file ..\u-boot\cpu\arm920t\start.S

CONFIG_SKIP_LOWLEVEL_INIT 00000000

Symbol: CONFIG_SKIP_LOWLEVEL_INIT
   Definitions
      At line 36 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 208 in file ..\u-boot\cpu\arm920t\start.S
      At line 274 in file ..\u-boot\cpu\arm920t\start.S

CONFIG_SKIP_RELOCATE_UBOOT 00000000

Symbol: CONFIG_SKIP_RELOCATE_UBOOT
   Definitions



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

      At line 37 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 230 in file ..\u-boot\cpu\arm920t\start.S
Comment: CONFIG_SKIP_RELOCATE_UBOOT used once
CONFIG_STACKSIZE 00008000

Symbol: CONFIG_STACKSIZE
   Definitions
      At line 42 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      None
Comment: CONFIG_STACKSIZE unused
CONFIG_START_FROM_RAM 00000001

Symbol: CONFIG_START_FROM_RAM
   Definitions
      At line 29 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 299 in file ..\u-boot\cpu\arm920t\start.S
Comment: CONFIG_START_FROM_RAM used once
CONFIG_TQ2440 00000001

Symbol: CONFIG_TQ2440
   Definitions
      At line 31 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 311 in file ..\u-boot\cpu\arm920t\start.S
Comment: CONFIG_TQ2440 used once
CONFIG_USE_IRQ 00000000

Symbol: CONFIG_USE_IRQ
   Definitions
      At line 35 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 62 in file ..\u-boot\cpu\arm920t\start.S
      At line 129 in file ..\u-boot\cpu\arm920t\start.S
      At line 220 in file ..\u-boot\cpu\arm920t\start.S

DW16 00000001

Symbol: DW16
   Definitions
      At line 52 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 57 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
      At line 58 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
      At line 59 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
      At line 60 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S

DW32 00000002

Symbol: DW32
   Definitions
      At line 53 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 62 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
      At line 63 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S

DW8 00000000



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols


Symbol: DW8
   Definitions
      At line 51 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 61 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: DW8 used once
INTMSK 4A000008

Symbol: INTMSK
   Definitions
      At line 165 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 178 in file ..\u-boot\cpu\arm920t\start.S
Comment: INTMSK used once
INTSUBMSK 4A00001C

Symbol: INTSUBMSK
   Definitions
      At line 166 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 192 in file ..\u-boot\cpu\arm920t\start.S
Comment: INTSUBMSK used once
REFCNT 000004F4

Symbol: REFCNT
   Definitions
      At line 167 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 214 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: REFCNT used once
REFEN 00000001

Symbol: REFEN
   Definitions
      At line 150 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 214 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: REFEN used once
TEXT_BASE 33D00000

Symbol: TEXT_BASE
   Definitions
      At line 44 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 117 in file ..\u-boot\cpu\arm920t\start.S
Comment: TEXT_BASE used once
TREFMD 00000000

Symbol: TREFMD
   Definitions
      At line 151 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 214 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: TREFMD used once
Tchr 00000002

Symbol: Tchr
   Definitions



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

      At line 166 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 214 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: Tchr used once
Trc 00000003

Symbol: Trc
   Definitions
      At line 165 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 214 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: Trc used once
Trp 00000000

Symbol: Trp
   Definitions
      At line 164 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 214 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: Trp used once
UBLB 00000008

Symbol: UBLB
   Definitions
      At line 55 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 59 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: UBLB used once
WAIT 00000004

Symbol: WAIT
   Definitions
      At line 54 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
   Uses
      At line 59 in file ..\u-boot\board\samsung\tq2440\lowlevel_init.S
Comment: WAIT used once
pWTCON 53000000

Symbol: pWTCON
   Definitions
      At line 164 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 170 in file ..\u-boot\cpu\arm920t\start.S
Comment: pWTCON used once
85 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

clock_init 00000000

Symbol: clock_init
   Definitions
      At line 53 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 227 in file ..\u-boot\cpu\arm920t\start.S
Comment: clock_init used once
start_armboot 00000000

Symbol: start_armboot
   Definitions
      At line 50 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 262 in file ..\u-boot\cpu\arm920t\start.S
Comment: start_armboot used once
|Image$$E_ZI$$ZI$$Base| 00000000

Symbol: |Image$$E_ZI$$ZI$$Base|
   Definitions
      At line 51 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 125 in file ..\u-boot\cpu\arm920t\start.S
Comment: |Image$$E_ZI$$ZI$$Base| used once
|Image$$E_ZI$$ZI$$Limit| 00000000

Symbol: |Image$$E_ZI$$ZI$$Limit|
   Definitions
      At line 52 in file ..\u-boot\cpu\arm920t\start.S
   Uses
      At line 127 in file ..\u-boot\cpu\arm920t\start.S
Comment: |Image$$E_ZI$$ZI$$Limit| used once
4 symbols
444 symbols in table
